WEBVTT

00:00:01.066 --> 00:00:03.656 align:middle
Acabamos de crear una nueva clase
de mensaje y un manejador...

00:00:04.046 --> 00:00:08.366 align:middle
y lo hemos instanciado y enviado
directamente al bus de mensajes.

00:00:08.916 --> 00:00:11.796 align:middle
Sí, acabamos de hacer algo totalmente...

00:00:11.796 --> 00:00:13.546 align:middle
¡aburrido! Pero...

00:00:13.546 --> 00:00:17.476 align:middle
¡en realidad es bastante parecido
a nuestro verdadero objetivo!

00:00:17.476 --> 00:00:21.816 align:middle
Nuestro objetivo real es fingir que un
sistema externo está poniendo mensajes

00:00:21.816 --> 00:00:23.866 align:middle
en una cola de RabbitMQ...

00:00:24.166 --> 00:00:26.096 align:middle
probablemente formateados como JSON...

00:00:26.516 --> 00:00:32.816 align:middle
y nosotros leeremos esos mensajes, transformaremos
ese JSON en un objeto LogEmoji y...

00:00:32.816 --> 00:00:35.516 align:middle
básicamente lo enviaremos a
través del bus de mensajes. En

00:00:36.266 --> 00:00:39.186 align:middle
realidad es el mismo flujo
básico: en ambos casos,

00:00:39.336 --> 00:00:42.916 align:middle
creamos un objeto LogEmoji
y lo pasamos a Messenger.

00:00:43.596 --> 00:00:47.326 align:middle
El primer paso es crear un
transporte que leerá estos mensajes

00:00:47.566 --> 00:00:51.046 align:middle
desde la cola en la que los
coloque el sistema exterior.

00:00:51.766 --> 00:00:54.856 align:middle
Mantendremos los transportes
async y async_priority_high:

00:00:55.146 --> 00:00:57.976 align:middle
seguiremos enviando y recibiendo desde ellos.

00:00:58.486 --> 00:01:02.786 align:middle
Pero ahora crea uno nuevo llamado,
qué tal: external_messages.

00:01:03.666 --> 00:01:08.386 align:middle
Utilizaré el mismo DSN porque
seguimos consumiendo cosas de RabbitMQ.

00:01:08.386 --> 00:01:14.476 align:middle
Pero para las opciones, en lugar de consumir
mensajes de message_high o messages_normal,

00:01:14.786 --> 00:01:19.656 align:middle
los consumiremos de cualquier cola que
esté utilizando ese sistema externo -

00:01:21.106 --> 00:01:24.506 align:middle
supongamos que se llama messages_from_external.

00:01:25.266 --> 00:01:32.426 align:middle
Ponlo sólo en ~. Por cierto, es importante
que utilicemos un transporte diferente que lea

00:01:32.426 --> 00:01:36.386 align:middle
de una cola diferente para
estos mensajes externos.

00:01:37.076 --> 00:01:43.426 align:middle
¿Por qué? Porque, como verás en unos minutos, estos
mensajes externos necesitarán una lógica especial

00:01:43.596 --> 00:01:46.656 align:middle
para descodificarlos en el objeto correcto.

00:01:47.386 --> 00:01:50.206 align:middle
Adjuntaremos esa lógica
especial al transporte.

00:01:51.196 --> 00:01:55.076 align:middle
De todos modos, por encima de
esto añade auto_setup: false.

00:01:56.366 --> 00:01:58.886 align:middle
Bien, aquí ocurren algunas cosas importantes.

00:01:59.576 --> 00:02:03.976 align:middle
La primera es que esta configuración de la cola
significa que cuando consumamos del transporte

00:02:03.976 --> 00:02:08.316 align:middle
external_messages ,
Messenger leerá los mensajes

00:02:08.316 --> 00:02:11.306 align:middle
de una cola llamada messages_from_external.

00:02:12.086 --> 00:02:14.716 align:middle
La segunda cosa importante
es auto_setup: false.

00:02:15.416 --> 00:02:19.346 align:middle
Esto le dice a Messenger que
no intente crear esta cola.

00:02:20.036 --> 00:02:21.036 align:middle
¿Por qué? Bueno...

00:02:21.286 --> 00:02:23.726 align:middle
Supongo que nuestra aplicación
podría crear esa cola...

00:02:23.966 --> 00:02:25.856 align:middle
que probablemente estaría bien...

00:02:26.166 --> 00:02:30.956 align:middle
pero como esperamos que un sistema
externo envíe mensajes a esta cola,

00:02:30.956 --> 00:02:36.416 align:middle
supongo que ese sistema querrá
encargarse de asegurarse de que existe.

00:02:37.026 --> 00:02:41.466 align:middle
Ah, y probablemente también te hayas dado cuenta de
que no he añadido ninguna configuración en exchange.

00:02:41.956 --> 00:02:43.356 align:middle
Eso fue a propósito.

00:02:43.966 --> 00:02:47.376 align:middle
Un intercambio sólo se utiliza
cuando se envía un mensaje.

00:02:47.726 --> 00:02:51.596 align:middle
Y como no pensamos enviar nunca un
mensaje a través de este transporte,

00:02:51.916 --> 00:02:54.406 align:middle
esa parte del transporte
no se utilizará nunca.

00:02:55.196 --> 00:02:59.306 align:middle
Así que con sólo esto, deberíamos
poder consumir del nuevo transporte.

00:03:00.326 --> 00:03:02.126 align:middle
Gira hacia tu terminal y ejecuta:

00:03:02.126 --> 00:03:09.486 align:middle
php bin/console messenger:consume
-vv external_messages Y...

00:03:09.836 --> 00:03:11.146 align:middle
¡explota!

00:03:11.446 --> 00:03:12.386 align:middle
Esto es increíble.

00:03:12.656 --> 00:03:15.956 align:middle
Error del canal del servidor:
404, mensaje: NOT_FOUND -

00:03:16.246 --> 00:03:23.116 align:middle
no queue 'messages_from_external' ¡Estamos
viendo nuestro en acción auto_setup: false !

00:03:23.896 --> 00:03:27.636 align:middle
En lugar de crear esa cola
cuando no existía, ha explotado.

00:03:28.126 --> 00:03:33.746 align:middle
¡Me encanta! Así que ahora vamos a
imaginar que somos ese sistema "externo "

00:03:33.946 --> 00:03:36.246 align:middle
y queremos crear esa cola.

00:03:37.086 --> 00:03:42.036 align:middle
Copia el nombre de la cola - - y, dentro del
Gestor de Conejos, messages_from_external

00:03:42.336 --> 00:03:44.536 align:middle
crea una nueva cola con ese nombre.

00:03:45.216 --> 00:03:47.846 align:middle
No te preocupes por las
opciones: no nos importarán.

00:03:48.836 --> 00:03:50.906 align:middle
Y... ¡hola cola!

00:03:51.766 --> 00:03:56.486 align:middle
Vamos a ver si podemos consumir
mensajes de ella: ¡Funciona!

00:03:56.726 --> 00:04:02.776 align:middle
Bueno... todavía no hay ningún mensaje en la cola,
pero se está comprobando felizmente si hay alguno.

00:04:02.776 --> 00:04:07.526 align:middle
Ahora, sigamos fingiendo que
somos el sistema "externo "

00:04:07.776 --> 00:04:09.796 align:middle
que va a enviar mensajes a esta cola.

00:04:09.796 --> 00:04:14.806 align:middle
En la pantalla de gestión de la cola,
podemos publicar un mensaje en la cola.

00:04:15.326 --> 00:04:16.386 align:middle
¡Muy práctico!

00:04:17.056 --> 00:04:19.736 align:middle
Entonces... ¿qué aspecto
tendrán estos mensajes?

00:04:20.266 --> 00:04:28.026 align:middle
Bueno... pueden tener cualquier aspecto: JSON, XML,
una imagen binaria, arte ASCII... lo que queramos.

00:04:28.346 --> 00:04:32.836 align:middle
Sólo tendremos que asegurarnos de que nuestra
aplicación Symfony pueda entender el mensaje;

00:04:33.476 --> 00:04:35.716 align:middle
eso es algo en lo que
trabajaremos en unos minutos.

00:04:36.366 --> 00:04:43.056 align:middle
Pensemos: si un sistema externo quiere enviar a
nuestra app un comando para registrar un emoji...

00:04:43.306 --> 00:04:47.326 align:middle
y puede elegir qué emoji
mediante un número...

00:04:47.816 --> 00:04:51.236 align:middle
entonces... ¿quizás el mensaje
sea JSON con este aspecto?

00:04:51.606 --> 00:04:55.536 align:middle
Una clave establecida en 2: ¡Publicar! emoji

00:04:57.146 --> 00:04:58.636 align:middle
Vale, ¡ve a comprobar el trabajador!

00:05:00.006 --> 00:05:01.926 align:middle
Woh... ¡ha explotado!

00:05:02.176 --> 00:05:08.006 align:middle
¡Genial! No se ha podido decodificar el mensaje con
la serialización de PHP Y luego muestra nuestro JSON.

00:05:08.536 --> 00:05:09.816 align:middle
¡Por supuesto!

00:05:10.366 --> 00:05:14.696 align:middle
Si estás consumiendo un mensaje que fue
colocado en la cola por un sistema externo...

00:05:15.116 --> 00:05:20.156 align:middle
ese mensaje probablemente no estará
en el formato de serialización PHP...

00:05:20.156 --> 00:05:21.786 align:middle
y realmente no debería estarlo.

00:05:22.396 --> 00:05:25.746 align:middle
No, el mensaje probablemente será JSON o XML.

00:05:26.226 --> 00:05:31.336 align:middle
El problema es que nuestro transporte está
intentando transformar ese JSON en un objeto

00:05:31.476 --> 00:05:34.186 align:middle
utilizando el serializador de PHP por defecto.

00:05:34.576 --> 00:05:38.046 align:middle
Literalmente, está llamando a
sobre ese JSON. unserialize()

00:05:38.596 --> 00:05:43.496 align:middle
Tenemos que ser más inteligentes: cuando un
transporte consume mensajes de un sistema externo,

00:05:43.726 --> 00:05:47.646 align:middle
tiene que tener un serializador personalizado
para que podamos tomar el control.

00:05:48.296 --> 00:05:49.606 align:middle
Hagamos eso a continuación
