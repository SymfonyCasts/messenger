WEBVTT

00:00:01.096 --> 00:00:04.176 align:middle
Cuando empezamos a trabajar
con AMQP, te dije que entrar as

00:00:04.176 --> 00:00:07.906 align:middle
en ImagePostController y
quitaras el sello DelayStamp.

00:00:08.616 --> 00:00:12.216 align:middle
Este sello es una forma de decirle al
sistema de transporte que espere al

00:00:12.216 --> 00:00:17.386 align:middle
menos 500 milisegundos antes de permitir
que un trabajador reciba el mensaje.

00:00:18.776 --> 00:00:22.906 align:middle
Cambiemos esto a 10 segundos,
es decir, 10000 milisegundos.

00:00:24.376 --> 00:00:29.626 align:middle
Ahora, dirígete a tu terminal y asegúrate
de que tu trabajador no se está ejecutando.

00:00:30.696 --> 00:00:32.836 align:middle
Bien, ¡vamos a ver qué pasa!

00:00:34.006 --> 00:00:36.266 align:middle
Ahora mismo ambas colas están vacías.

00:00:39.306 --> 00:00:41.036 align:middle
Voy a subir 3 fotos...

00:00:44.106 --> 00:00:45.886 align:middle
entonces... ¡rápido, rápido, rápido!

00:00:45.886 --> 00:00:47.006 align:middle
Ve a mirar las colas.

00:00:49.326 --> 00:00:50.746 align:middle
De repente, ¡puf!

00:00:51.056 --> 00:00:52.346 align:middle
Ha aparecido una nueva cola...

00:00:52.526 --> 00:00:57.686 align:middle
con un nombre extraño:
delay_messages_high_priority__10000.

00:00:57.816 --> 00:01:00.316 align:middle
Y tiene - ¡dun, dun, dun!

00:01:00.586 --> 00:01:02.306 align:middle
- tres mensajes en ella.

00:01:03.686 --> 00:01:04.816 align:middle
Vamos a mirar dentro.

00:01:05.946 --> 00:01:10.856 align:middle
Es interesante que los mensajes se hayan
entregado aquí, en lugar de la cola normal.

00:01:11.246 --> 00:01:11.916 align:middle
Pero luego...

00:01:11.986 --> 00:01:13.056 align:middle
¿desaparecieron?

00:01:13.946 --> 00:01:18.156 align:middle
El gráfico muestra cómo los mensajes
que estaban en esta cola pasaron de 3 a 0.

00:01:18.496 --> 00:01:19.486 align:middle
Pero... ¿cómo?

00:01:19.896 --> 00:01:21.746 align:middle
¡Nuestro trabajador ni
siquiera está en marcha!

00:01:22.576 --> 00:01:25.146 align:middle
¡Woh! ¡Esta página acaba de ser 404'ed!

00:01:25.846 --> 00:01:27.106 align:middle
¡La cola ha desaparecido!

00:01:27.376 --> 00:01:29.206 align:middle
¡Algo está atacando nuestras colas!

00:01:30.476 --> 00:01:32.096 align:middle
Vuelve a la lista de colas.

00:01:33.086 --> 00:01:36.056 align:middle
Sí, esa extraña cola de
"retraso" ha desaparecido...

00:01:36.876 --> 00:01:41.746 align:middle
oh, pero ahora los tres mensajes están
de alguna manera en messages_high.

00:01:42.516 --> 00:01:43.766 align:middle
¿Qué demonios ha pasado?

00:01:44.736 --> 00:01:48.026 align:middle
Bueno, primero, para demostrar que
todo el sistema sigue funcionando...

00:01:48.176 --> 00:01:50.956 align:middle
independientemente de la
locura que acaba de ocurrir...

00:01:51.376 --> 00:01:55.066 align:middle
ejecutemos nuestro trabajador y consumamos
desde los transportes async_priority_high

00:01:55.226 --> 00:02:02.926 align:middle
y async: Los consume y...

00:02:03.176 --> 00:02:07.436 align:middle
cuando nos desplazamos, vamos a la
página de inicio y refrescamos, ¡sí!

00:02:07.836 --> 00:02:09.996 align:middle
Ponka se ha añadido a esas imágenes.

00:02:11.076 --> 00:02:13.786 align:middle
Vale, vamos a ver cómo ha
funcionado esto. Por un lado

00:02:14.096 --> 00:02:20.816 align:middle
, no es importante: si hubiéramos estado ejecutando
nuestro trabajador todo el tiempo, habrías

00:02:21.076 --> 00:02:25.846 align:middle
visto que esos mensajes se
retrasaron de hecho 10 segundos.

00:02:26.546 --> 00:02:30.526 align:middle
La forma de retrasar los mensajes
en RabbitMQ es un poco loca...

00:02:30.716 --> 00:02:34.846 align:middle
pero si no te importan los detalles,
Messenger se encarga de ello por ti.

00:02:35.406 --> 00:02:37.666 align:middle
Pero quiero ver cómo funciona esto...

00:02:37.776 --> 00:02:41.446 align:middle
en parte porque será una gran oportunidad
para ver cómo funcionan algunas

00:02:41.446 --> 00:02:44.846 align:middle
de las características más avanzadas de AMQP.

00:02:46.086 --> 00:02:47.236 align:middle
Haz clic en "Intercambios".

00:02:48.776 --> 00:02:53.296 align:middle
¡Sorpresa! Hay un nuevo
intercambio llamado delays.

00:02:53.626 --> 00:03:00.136 align:middle
Y en lugar de ser del tipo fanout como nuestros otros
dos intercambios, se trata de un intercambio direct.

00:03:00.716 --> 00:03:02.596 align:middle
Pronto hablaremos de lo que eso significa.

00:03:03.016 --> 00:03:07.746 align:middle
Pero lo primero que hay que saber es que cuando
Messenger ve que un mensaje debe retrasarse,

00:03:08.126 --> 00:03:14.916 align:middle
lo envía a este intercambio en lugar de
enviarlo al intercambio normal, el "correcto".

00:03:15.666 --> 00:03:19.826 align:middle
En este momento, el intercambio
delays no tiene enlaces...

00:03:19.886 --> 00:03:23.066 align:middle
pero eso cambiará cuando
enviemos un mensaje con retraso.

00:03:24.176 --> 00:03:29.276 align:middle
Para poder ver realmente lo que ocurre,
aumentemos el retraso a 60 segundos.

00:03:30.846 --> 00:03:42.666 align:middle
Vale, sube 3 fotos más: ahora sabemos que
se acaban de enviar al intercambio delays.

00:03:43.266 --> 00:03:45.226 align:middle
Y... si actualizas ese intercambio...

00:03:45.726 --> 00:03:47.196 align:middle
¡tiene un nuevo enlace!

00:03:47.846 --> 00:03:57.556 align:middle
Esto dice: Si un mensaje enviado aquí tiene una " clave de
enrutamiento " establecida en delay_messages_high_priority__60000

00:03:57.706 --> 00:04:04.066 align:middle
, entonces enviaré ese mensaje a una cola
llamada delay_messages_high_priority__60000 Una

00:04:04.066 --> 00:04:10.616 align:middle
"clave de enrutamiento" es una propiedad extra que
puedes establecer en un mensaje que se envía a AMQP.

00:04:11.456 --> 00:04:18.346 align:middle
Normalmente, Messenger no establece ninguna clave de enrutamiento,
pero cuando un mensaje tiene un retraso, sí lo hace.

00:04:18.956 --> 00:04:22.636 align:middle
Y gracias a esta vinculación,
esos tres mensajes se envían

00:04:22.756 --> 00:04:26.486 align:middle
a la cola delay_messages_high_priority__60000.

00:04:27.216 --> 00:04:33.666 align:middle
Así es como funciona un intercambio direct: en lugar
de enviar cada mensaje a todas las colas vinculadas,

00:04:34.036 --> 00:04:37.896 align:middle
utiliza las reglas de la "clave de
vinculación" para averiguar a qué cola

00:04:38.246 --> 00:04:40.666 align:middle
-o colas- debe ir un mensaje.

00:04:41.746 --> 00:04:45.636 align:middle
Haz clic en la cola porque es muy interesante.

00:04:47.026 --> 00:04:48.806 align:middle
Tiene unas cuantas propiedades importantes.

00:04:49.626 --> 00:04:55.596 align:middle
La primera es un x-message-ttl
fijado en 60 segundos.

00:04:56.176 --> 00:04:56.976 align:middle
¿Qué significa esto?

00:04:57.646 --> 00:05:02.696 align:middle
Cuando estableces esto en una cola, significa que,
después de que un mensaje haya estado en esta cola

00:05:02.696 --> 00:05:06.686 align:middle
durante 60 segundos, RabbitMQ
debería eliminarlo...

00:05:07.106 --> 00:05:08.896 align:middle
lo que parece una locura, ¿verdad?

00:05:09.306 --> 00:05:12.986 align:middle
¿Por qué querríamos que los mensajes
sólo vivieran durante 60 segundos...

00:05:12.986 --> 00:05:14.496 align:middle
y luego sean eliminados?

00:05:15.176 --> 00:05:16.886 align:middle
Bueno... es por diseño...

00:05:17.296 --> 00:05:23.806 align:middle
y funciona junto con esta segunda propiedad
importante: x-dead-letter-exchange.

00:05:23.876 --> 00:05:31.586 align:middle
Si una cola tiene esta propiedad, le dice a Rabbit
que cuando un mensaje alcanza su TTL de 60 segundos

00:05:31.586 --> 00:05:35.006 align:middle
y necesita ser eliminado, no debe ser borrado.

00:05:35.506 --> 00:05:41.586 align:middle
En su lugar, debe ser enviado al
intercambio messages_high_priority.

00:05:42.306 --> 00:05:45.666 align:middle
Así, Messenger entrega los
mensajes al intercambio delays

00:05:45.666 --> 00:05:48.276 align:middle
con una clave de enrutamiento que
hace que se envíen aquí. Después,

00:05:48.736 --> 00:05:54.356 align:middle
tras permanecer 60 segundos, el mensaje se
retira de esta cola y se envía al intercambio

00:05:54.356 --> 00:05:56.526 align:middle
messages_high_priority.

00:05:57.416 --> 00:06:01.416 align:middle
Sí, ¡se entrega al lugar
correcto después de 60 segundos!

00:06:01.696 --> 00:06:02.276 align:middle
Y entonces...

00:06:02.276 --> 00:06:06.626 align:middle
¡404! Incluso la propia cola
está marcada como "temporal":

00:06:07.446 --> 00:06:12.026 align:middle
una vez que no le queda
ningún mensaje, se borra.

00:06:12.026 --> 00:06:13.556 align:middle
Cuando vuelves a hacer clic para ver las colas,

00:06:14.136 --> 00:06:17.356 align:middle
los mensajes fueron entregados
a la cola messages_high...

00:06:17.716 --> 00:06:20.806 align:middle
pero ésta ya está vacía porque
nuestro trabajador los ha consumido.

00:06:22.216 --> 00:06:22.976 align:middle
Así que... sí...

00:06:23.426 --> 00:06:29.166 align:middle
¡vaya! Cada vez que publicamos
un mensaje con retardo, Messenger

00:06:29.586 --> 00:06:34.576 align:middle
crea la cola de retardo temporal con la configuración
del TTL y del intercambio de letras muertas,

00:06:34.816 --> 00:06:40.986 align:middle
añade un enlace al intercambio delays para enrutar a
esta cola, y añade la clave de enrutamiento correcta

00:06:40.986 --> 00:06:44.306 align:middle
al mensaje para asegurarse
de que acaba en esa cola.

00:06:45.176 --> 00:06:49.106 align:middle
Realmente puedes empezar a ver lo
ricas que son las funciones de AMQP...

00:06:49.106 --> 00:06:50.756 align:middle
aunque no las necesites. La

00:06:51.646 --> 00:06:57.346 align:middle
característica más importante que acabamos de ver es
el tipo de intercambio direct: un intercambio que se basa

00:06:57.346 --> 00:07:01.056 align:middle
en las claves de enrutamiento para
averiguar a dónde debe ir cada mensaje.

00:07:02.346 --> 00:07:07.216 align:middle
A continuación, ¿podríamos utilizar intercambios
directos para nuestros mensajes no retardados?

00:07:07.956 --> 00:07:12.716 align:middle
En lugar de dos intercambios que se
"abanican" cada uno a una cola distinta,

00:07:13.046 --> 00:07:17.226 align:middle
¿podríamos crear un solo intercambio que,
mediante el uso de claves de enrutamiento,

00:07:17.446 --> 00:07:20.146 align:middle
entregue los mensajes correctos
a las colas correctas?

00:07:21.066 --> 00:07:21.676 align:middle
Totalmente
