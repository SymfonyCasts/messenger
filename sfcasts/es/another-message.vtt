WEBVTT

00:00:01.016 --> 00:00:03.276 align:middle
Nuestra aplicación tiene
otro pequeño superpoder.

00:00:04.066 --> 00:00:07.636 align:middle
Si por alguna razón no estás
contento con tu imagen Ponka...

00:00:07.876 --> 00:00:10.386 align:middle
Ni siquiera estoy seguro
de cómo sería posible...

00:00:10.666 --> 00:00:11.886 align:middle
puedes eliminarla.

00:00:12.606 --> 00:00:17.286 align:middle
Cuando haces clic en ese botón, se envía una
petición AJAX que llega a esta acción delete().

00:00:17.866 --> 00:00:20.416 align:middle
Y... eso hace realmente dos cosas.

00:00:20.416 --> 00:00:24.216 align:middle
En primer lugar,
$photoManager->deleteImage() se encarga

00:00:24.296 --> 00:00:27.316 align:middle
de eliminar físicamente la
imagen del sistema de archivos.

00:00:28.056 --> 00:00:31.786 align:middle
He añadido un sleep() para conseguir un efecto
dramático, pero borrar algo del sistema de archivos

00:00:31.786 --> 00:00:37.266 align:middle
podría ser un poco pesado si los archivos
estuvieran almacenados en la nube, como en S3.

00:00:37.266 --> 00:00:41.386 align:middle
Y en segundo lugar, el controlador
borra el ImagePost de la base de datos.

00:00:41.896 --> 00:00:44.126 align:middle
Pero... pensando en estos dos pasos...

00:00:44.306 --> 00:00:50.186 align:middle
lo único que tenemos que hacer inmediatamente
es borrar la imagen de la base de datos.

00:00:51.056 --> 00:00:56.156 align:middle
Si sólo hiciéramos eso y el usuario
refrescara la página, ya no estaría.

00:00:56.626 --> 00:00:57.566 align:middle
Y luego...

00:00:57.966 --> 00:01:01.406 align:middle
si elimináramos el archivo
real unos segundos...

00:01:01.406 --> 00:01:04.136 align:middle
o minutos o incluso días después...

00:01:04.366 --> 00:01:05.666 align:middle
¡estaría totalmente bien!

00:01:06.256 --> 00:01:09.966 align:middle
Pero... en unos minutos hablaremos más
sobre cómo hacer cosas asíncronas.

00:01:10.656 --> 00:01:13.646 align:middle
Ahora mismo, vamos a refactorizar
toda esta lógica de borrado

00:01:13.646 --> 00:01:15.566 align:middle
en el patrón del bus de comandos
que acabamos de aprender.

00:01:15.706 --> 00:01:19.966 align:middle
En primer lugar, necesitamos
la clase mensaje o "comando".

00:01:20.596 --> 00:01:27.416 align:middle
Copiemos AddPonkaToImage, peguémosla
y llamémosla DeleteImagePost.php.

00:01:27.416 --> 00:01:28.906 align:middle
Actualiza el nombre de la clase y luego...

00:01:29.406 --> 00:01:31.436 align:middle
um... ¡no hacer nada!

00:01:32.096 --> 00:01:37.536 align:middle
Casualmente, esta clase de mensaje será
exactamente igual: el manip ulador necesitará

00:01:37.536 --> 00:01:39.676 align:middle
saber qué ImagePost debe eliminar.

00:01:39.676 --> 00:01:42.456 align:middle
Es hora del paso 2: ¡el manejador!

00:01:43.186 --> 00:01:46.526 align:middle
Crea una nueva clase PHP y
llámala DeleteImagePostHandler.

00:01:48.636 --> 00:01:52.566 align:middle
Al igual que antes, dale un
public function __invoke()

00:01:54.496 --> 00:01:58.036 align:middle
con un DeleteImagePost como único argumento.

00:01:58.996 --> 00:02:03.646 align:middle
Ahora, es el mismo proceso que antes: copia
las tres primeras líneas del controlador,

00:02:04.426 --> 00:02:06.826 align:middle
bórralas y pégalas en el manejador.

00:02:08.926 --> 00:02:11.106 align:middle
Esta vez, necesitamos dos servicios.

00:02:11.846 --> 00:02:17.796 align:middle
Añade public function __construct()
con PhotoFileManager $photoManager

00:02:19.526 --> 00:02:22.206 align:middle
y EntityManagerInterface $entityManager.

00:02:22.786 --> 00:02:27.746 align:middle
Pulsaré Alt + Intro y haré clic en inicializar
campos para crear ambas propiedades y establecerlas.

00:02:31.496 --> 00:02:35.906 align:middle
Aquí abajo, utiliza $this->photoManager,
$this->entityManager

00:02:36.136 --> 00:02:38.916 align:middle
y uno más $this->entityManager.

00:02:39.546 --> 00:02:43.276 align:middle
Y, como antes, necesitamos saber
qué ImagePost vamos a borrar.

00:02:44.146 --> 00:02:48.966 align:middle
Prepáralo con $imagePost =
$deleteImagePost->getImagePost().

00:02:49.536 --> 00:02:51.036 align:middle
¡Ding! Ese es mi...

00:02:51.246 --> 00:02:52.386 align:middle
¡sonido de que está hecho!

00:02:52.596 --> 00:02:55.206 align:middle
Porque, tenemos un mensaje, un manejador

00:02:55.456 --> 00:02:58.356 align:middle
y Symfony debe saber que están unidos.

00:02:58.966 --> 00:03:01.116 align:middle
El último paso es enviar el mensaje.

00:03:01.116 --> 00:03:01.786 align:middle
En el controlador...

00:03:02.406 --> 00:03:04.726 align:middle
ya no necesitamos estos
dos últimos argumentos...

00:03:05.186 --> 00:03:08.426 align:middle
sólo necesitamos
MessageBusInterface $messageBus.

00:03:09.106 --> 00:03:14.726 align:middle
Y entonces, esto es maravilloso,
todo nuestro controlador es:

00:03:14.726 --> 00:03:19.256 align:middle
$messageBus->dispatch(new
DeleteImagePost($imagePost)).

00:03:20.156 --> 00:03:20.956 align:middle
Muy bonito, ¿verdad?

00:03:21.326 --> 00:03:22.386 align:middle
Vamos a ver si todo funciona.

00:03:23.026 --> 00:03:25.676 align:middle
Muévete, haz clic en la "x" y...

00:03:25.676 --> 00:03:28.826 align:middle
hmm... no ha desaparecido.

00:03:30.296 --> 00:03:32.926 align:middle
Y... ¡parece que era un error 500! Gracias al

00:03:33.386 --> 00:03:38.556 align:middle
poder del perfilador, podemos hacer clic en el pequeño
enlace para saltar directamente a una versión grande,

00:03:38.556 --> 00:03:41.096 align:middle
bonita y en HTML de esa excepción.

00:03:41.996 --> 00:03:48.866 align:middle
Interesante: No hay controlador para el mensaje
App\Message\DeleteImagePost Eso es interesante.

00:03:49.466 --> 00:03:56.006 align:middle
Antes de averiguar qué ha fallado, quiero
mencionar una cosa: en un bus de comandos,

00:03:56.376 --> 00:04:03.086 align:middle
cada mensaje suele tener exactamente
un manejador: ni dos ni cero.

00:04:03.456 --> 00:04:08.376 align:middle
Y por eso Messenger nos da un útil
error si no encuentra ese manejador.

00:04:09.006 --> 00:04:14.146 align:middle
Hablaremos más de esto más adelante y flexibilizaremos
estas reglas cuando hablemos de los buses de eventos.

00:04:14.986 --> 00:04:15.506 align:middle
De todos modos...

00:04:15.876 --> 00:04:20.106 align:middle
¿por qué Messenger cree que
DeleteImagePost no tiene un controlador?

00:04:20.466 --> 00:04:22.986 align:middle
¿No puede ver la clase DeleteImagePostHandler?

00:04:23.076 --> 00:04:29.636 align:middle
Busca tu terminal y ejecuta: php
bin/console debug:messenger ¡Woh!

00:04:30.046 --> 00:04:32.376 align:middle
¡Sólo ve nuestra única clase manejadora!

00:04:32.936 --> 00:04:38.706 align:middle
Lo que realmente hace este comando es lo siguiente:
encuentra todas las clases "manejadoras" del sistema,

00:04:39.046 --> 00:04:42.056 align:middle
y luego imprime el "mensaje"
que maneja junto a él.

00:04:42.616 --> 00:04:48.316 align:middle
Así que... ¡esto confirma que, por alguna
razón, Messenger no ve nuestro manejador!

00:04:49.066 --> 00:04:51.716 align:middle
Y... ¡puede que hayas detectado mi error!

00:04:52.516 --> 00:04:56.966 align:middle
Para encontrar todos los manejadores, Symfony
busca en el directorio src/ las clases

00:04:56.966 --> 00:04:59.366 align:middle
que implementan MessageHandlerInterface.

00:04:59.636 --> 00:05:01.756 align:middle
Y... ¡me olvidé de esa parte!

00:05:02.566 --> 00:05:05.256 align:middle
Añade implements MessageHandlerInterface.

00:05:09.196 --> 00:05:14.026 align:middle
Ejecuta de nuevo
debug:messenger: ¡Ahora lo ve!

00:05:14.766 --> 00:05:20.256 align:middle
Probemos de nuevo: cierra el
perfilador, prueba a darle a la "x" y...

00:05:20.606 --> 00:05:22.476 align:middle
¡esta vez funciona!

00:05:22.856 --> 00:05:29.876 align:middle
Informe de estado: tenemos dos mensajes y cada uno
tiene un manejador que potencialmente está haciendo un

00:05:29.876 --> 00:05:34.306 align:middle
trabajo bastante pesado, como la manipulación
de imágenes o hablar a través de una red

00:05:34.306 --> 00:05:35.776 align:middle
si los archivos se almacenan en la nube. Es

00:05:36.626 --> 00:05:42.216 align:middle
hora de hablar de los transportes: el
concepto clave para tomar este trabajo

00:05:42.446 --> 00:05:47.846 align:middle
y hacerlo de forma asíncrona, de modo que nuestros
usuarios no tengan que esperar a que todo ese trabajo pesado

00:05:47.846 --> 00:05:50.406 align:middle
termine antes de obtener una respuesta
